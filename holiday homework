QUESTION 1 FOR INSERTING NEW ELEMENT IN ARRAY
  
#include <iostream>
using namespace std;

int main() {
    int arr[100], n, a;
    cout << "Enter the number of elements in the array: ";
    cin >> n;
    cout << "Enter the elements of the array: ";
    for (int i = 0; i < n; i++) {
        cin >> arr[i];
    }
    cout << "Enter the new element: ";
    cin >> a;
    for (int i = n; i > 0; i--) {
        arr[i] = arr[i - 1];
    }
    arr[0] = a;
    n++;
    cout << "Updated new array: ";
    for (int i = 0; i < n; i++) {
        cout << arr[i] << " ";
    }
    cout << endl;

    return 0;
}
//*Algorithm
//step 1 Input the number of elements in the array
//step 2 Input the elements of the array
//step 3 Input the new element
//step 4  Shift elements to the right to make space for the new element
//step 4 Insert the new element at the beginning
//srep 5 Output the updated new array

QUESTION 2 FOR DELETION OF ARRAY

#include <iostream>
using namespace std;

int main() {
    int arr[100], n, a;
    cout << "Enter the number of elements in the array: ";
    cin >> n;
    cout << "Enter the elements of the array: ";
    for (int i = 0; i < n; i++) {
        cin >> arr[i];
    }
    for (int i =1;i<n; i++) {
        arr[i-1] = arr[i];
    }
    n--;
    cout << "Updated new array: ";
    for (int i = 0; i < n; i++) {
        cout << arr[i] << " ";
    }
    cout << endl;

    return 0;
}
//*Algorithm
//step 1 Input the number of elements in the array
//step 2 Input the elements of the array
//step 3  Shift elements to the right to delete one  element
//srep 4 Output the updated new array

QUESTION 3 MAXIMUM IN ARRAY

#include <iostream>
using namespace std;
int main() {
     int arr[100], n, a;
     int ans=0;
    cout << "Enter the number of elements in the array: ";
    cin >> n;
    cout << "Enter the elements of the array: ";
    for (int i = 0; i < n; i++) {
        cin >> arr[i];
    }
    for (int i = 0; i < n; i++) {
        if(ans<arr[i]){
        ans=arr[i];}
    }
    cout<<"maximum of array"<<endl<<ans;
    return 0;
}
/*Algorithm
step 1 input the number of elements in array
step 2 input the elements in array
step 3 create loop where ans = 0 compare with arr and update arr value 
step 4 output maximum among the all arr elements*/

QUESTION 4 MINIMUM IN ARRAY

#include <iostream>
#include <limits.h>
using namespace std;

int main() {
    int arr[100], n;
    int ans = INT_MAX;

    cout << "Enter the number of elements in the array: ";
    cin >> n;
    
    cout << "Enter the elements of the array: ";
    for (int i = 0; i < n; i++) {
        cin >> arr[i];
    }

    for (int i = 0; i < n; i++) {
        if (ans > arr[i]) {
            ans = arr[i];
        }
    }

    cout << "Minimum of array: " << ans << endl;
    return 0;
}

/*Algorithm
step 1  use limits.h & input the number of elements in array
step 2 input the elements in array
step 3 create loop where ans = INT_MAX compare with arr and update arr value 
step 4 output maximum among the all arr elements*/

QUESTION 5 REVERSE ARRAY

#include <iostream>
using namespace std;

int main() {
    int arr[100], n;

    cout << "Enter the number of elements in the array: ";
    cin >> n;
    cout << "Enter the elements of the array: ";
    for (int i = 0; i < n; i++) {
        cin >> arr[i];
    }

    // Initialize pointers start and end after reading n
    int start = 0, end = n - 1;

    // Reverse the array
    while (start < end) {
        int a = arr[start];
        arr[start] = arr[end];
        arr[end] = a;
        start++;
        end--;
    }

    // Output the updated array
    cout << "Updated array: ";
    for (int i = 0; i < n; i++) {
        cout << arr[i] << " ";
    }
    cout << endl;

    return 0;
}

QUESTION 6 CREATE 2D ARRAY

#include<iostream>
using namespace std;
int main(){
    
    int y;
    int z;
    
    cout<<"Enter the no of rows : ";
    cin>>y;
    
    cout<<"Enter the no of columns : ";
    cin>>z;
    int arr[y][z];
    cout<<endl;
    cout<<"Enter the elements of the array : "<<endl;
    for(int i = 0; i < y; i++){
        cout<<endl<<"Enter the elements of the row "<<i+1<<" : "<<endl;
        for(int j = 0; j < z; j++){
            cout<<"arr["<<i<<"]["<<j<<"] : ";
            cin>>arr[i][j];
        }
    }
    
    // Print the elements of an array :
    cout<<endl<<"Elements of the array : "<<endl;
    for(int i = 0; i < y; i++){
        for(int j = 0; j < z; j++){
            cout<<arr[i][j]<<" ";
        }
        cout<<endl;
    }
    
}

QUESTION 9 ADDITION MU;TIPLICATION AND TRANSPOSE 

#include <iostream>
using namespace std;
// Program to Addition,multiplication,Transpose Two Matrices.
void inputMatrix(int matrix[3][3], int rows, int cols) {
    cout << "Enter the elements of the matrix: " << endl;
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
            cout << "matrix[" << i << "][" << j << "] = ";
            cin >> matrix[i][j];
        }
    }
}
void printMatrix(int matrix[3][3], int rows, int cols) {
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
            cout << matrix[i][j] << " ";
        }
        cout << endl;
    }
}
// Addition of two matrices
void addMatrices(int matrix1[3][3], int matrix2[3][3], int result[3][3], int rows, int cols) {
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
            result[i][j] = matrix1[i][j] + matrix2[i][j];
        }
    }
}
// Multiplication of two matrices
void multiplyMatrices(int matrix1[3][3], int matrix2[3][3], int result[3][3], int rows, int cols) {
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
            result[i][j] = 0;
            for (int k = 0; k < cols; k++) {
                result[i][j] += matrix1[i][k] * matrix2[k][j];
            }
        }
    }
}
// Transpose of a matrix
void transposeMatrix(int matrix[3][3], int result[3][3], int rows, int cols) {
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
            result[j][i] = matrix[i][j];  // Rows become columns and vice versa
        }
    }
}
int main() {
    int matrix1[3][3], matrix2[3][3], result[3][3];
    int rows = 3, cols = 3;
    cout << "Matrix 1: " << endl;
    inputMatrix(matrix1, rows, cols);
    cout<<endl;
    
    cout << "Matrix 2: " << endl;
    inputMatrix(matrix2, rows, cols);
    cout<<endl;
    
    // Addition of matrices
    addMatrices(matrix1, matrix2, result, rows, cols);
    cout << "\nAddition of matrices: " << endl;
    printMatrix(result, rows, cols);
    // Multiplication of matrices
    multiplyMatrices(matrix1, matrix2, result, rows, cols);
    cout << "\nMultiplication of matrices: " << endl;
    printMatrix(result, rows, cols);
    // Transpose of Matrix 1
    transposeMatrix(matrix1, result, rows, cols);
    cout << "\nTranspose of Matrix 1: " << endl;
    printMatrix(result, rows, cols);
    // Transpose of Matrix 2
    transposeMatrix(matrix2, result, rows, cols);
    cout << "\nTranspose of Matrix 2: " << endl;
    printMatrix(result, rows, cols);
    return 0;
}

QUESTION 10 TWO SUM PROBLEM

#include<iostream>
#include<vector>
using namespace std;
// Two sum problem :
vector<int> two_sum(vector<int> &arr,int target){
    
    // Used to store the index of the numbers
    vector<int> ans;
    
    // Finding the numbers
    int i = 0;
    int j = arr.size()-1;
    while(i < j){
        int sum = arr[i] + arr[j];
        if(sum == target){
            ans.push_back(i);
            ans.push_back(j);
            break;
        }
        else if(sum < target) i++;
        else j--;
    }
    return ans;
}
int main(){
    
    vector<int> arr = { 3, 6, 5, 20};
    int target = 9;
    
    vector<int> result = two_sum(arr,target);
    
    cout<<"Index of the elements : ";
    for(int i = 0; i < result.size(); i++){
        cout<<result[i]<<" ";
    }
    
    return 0;
}

SEGREGATation in the given array

#include <iostream>
#include <vector>
using namespace std;
// Segregating the even and odd array
void segregate_EO(vector<int> &arr) {
    vector<int> evens;
    vector<int> odds;
    
    for (int i = 0; i < arr.size(); i++) {
        if (arr[i] % 2 == 0) {
            evens.push_back(arr[i]);
        } else {
            odds.push_back(arr[i]); 
        }
    }
    
    int index = 0;
    for (int i = 0; i < evens.size(); i++) {
        arr[index++] = evens[i];
    }
    for (int i = 0; i < odds.size(); i++) {
        arr[index++] = odds[i];
    }
}
// Function to print the array
void get(vector<int> &arr) {
    for (int i = 0; i < arr.size(); i++) {
        cout << arr[i] << " ";
    }
    cout << endl;
}
int main() {
    vector<int> arr = {12, 34, 45, 9, 8, 90, 3};
    cout << "Array before segregation: " << endl;
    get(arr);
    segregate_EO(arr);
    cout << "Array after segregation: " << endl;
    get(arr);
    return 0;
}

QUESTION 07 FIND SECOND LONGEST ELEMENT IN ARRAY

#include <iostream>
#include <limits.h>
using namespace std;
// Program to reverse the element in the array  
void take_input(int arr[],int n){
    cout<<"Enter the elements of the array : "<<endl;
    for(int i = 0; i < n; i++){
        cout<<"arr["<<i<<"] : ";
        cin>>arr[i];
    }
    cout<<endl;
    return;
}
void get(int arr[],int n){
    cout<<"Elements of the array : ";
    for(int i = 0; i < n; i++){
        cout<<arr[i]<<" ";
    }
    cout<<endl;
    return;
}
int main() { 
    int n;
    cout<<"Enter the no of elements in the array : ";
    cin>>n<<endl;
    int arr[n];
    get(arr,n);
    
    // Printing the elements of an array : 
    get(arr,n);
    
    //find the second largest element in an array
    int maxi = INT_MIN;
    int ans = 0;
    for(int i = 0; i<n; i++){
        if(maxi < arr[i]) {
            maxi = arr[i];
            ans = i;
        }
    }
    int second_maxi = INT_MIN;
    int second_ans = 0;
    for(int i = 0; i < n; i++){
        if(second_maxi < arr[i] && i != max_idx){
            second_maxi = arr[i];
            second_ans = i;
        }
    }
    
    cout<<"Maximum Element -->> "<<maxi<<endl;
    cout<<"Second Maximum Element -->> "<<second_maxi<<endl;
    
    return 0;
}
